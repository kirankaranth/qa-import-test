{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1"
    },
    "id" : "1",
    "uri" : "pipelines/CanDoRandomThingsBuddy",
    "language" : "scala",
    "fabricId" : "46",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "abhishekse2etestspropheco_team.scalaproject.functions",
      "sharedFunctionPackageNames" : [ "io.prophecy.scalamaskinggems.functions", "io.prophecy.scalagems.functions", "io.prophecy.warehousegems.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "test56",
          "kind" : {
            "type" : "string",
            "value" : "dsfsaf"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "sdds",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ {
      "type" : "coordinates",
      "coordinates" : "mysql:mysql-connector-java:8.0.29",
      "name" : "mysql",
      "enabled" : false,
      "id" : "59965868",
      "exclusions" : [ ]
    }, {
      "type" : "coordinates",
      "coordinates" : "org.postgresql:postgresql:42.3.4",
      "name" : "postgres",
      "enabled" : false,
      "id" : "1360721423",
      "exclusions" : [ ]
    }, {
      "type" : "coordinates",
      "coordinates" : "org.scalanlp:epic_2.12:0.5",
      "name" : "epic",
      "enabled" : false,
      "id" : "418005485",
      "exclusions" : [ ],
      "repo" : "https://repo.maven.apache.org/maven2/"
    }, {
      "type" : "coordinates",
      "coordinates" : "org.typelevel:cats-core_2.12:2.6.1",
      "name" : "cats",
      "enabled" : false,
      "id" : "1575366423",
      "exclusions" : [ ]
    }, {
      "type" : "coordinates",
      "coordinates" : "org.springframework:spring-beans:5.3.19",
      "name" : "spring",
      "enabled" : false,
      "id" : "611418782",
      "exclusions" : [ ]
    }, {
      "type" : "coordinates",
      "coordinates" : "io.prophecy:prophecy-libs_2.12:4.0.0-3.2.0",
      "name" : "prophecy-libs-4.0.0",
      "enabled" : false,
      "id" : "GXM_V",
      "exclusions" : [ ],
      "repo" : "https://prophecyio.jfrog.io/artifactory/default-sbt-release/"
    }, {
      "type" : "coordinates",
      "coordinates" : "junit:junit:4.13.1",
      "name" : "junit",
      "enabled" : false,
      "id" : "O0zCh",
      "exclusions" : [ "" ]
    }, {
      "type" : "coordinates",
      "coordinates" : "org.apache.spark:spark-mllib_2.12:3.3.0",
      "name" : "mllib",
      "enabled" : false,
      "id" : "WsJw2",
      "exclusions" : [ ]
    }, {
      "type" : "coordinates",
      "coordinates" : "com.crealytics:spark-excel_2.12:3.4.1_0.19.0",
      "name" : "sparkexcel",
      "enabled" : false,
      "id" : "VJIAR",
      "exclusions" : [ ]
    } ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "41",
      "projectName" : "ProphecyMaskingScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "39",
      "projectName" : "ProphecySparkBasicsScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "40",
      "projectName" : "ProphecyWarehouseScala",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.candorandomthingsbuddy",
    "configurationVersion" : "v1"
  },
  "connections" : [ {
    "id" : "d7T_S42UJrSOtolZ6Norm$$7pVMZRRjkOZlUtfyIpFKX",
    "source" : "uYV-56hdkfKB5mrdaY71J$$O8jSrDw9o0rH8m7TgXB2E",
    "sourcePort" : "aVsxNF8mh-7PZNzD2YVzm$$DfiR-wAZIBY2SyD4DuzMQ",
    "target" : "80LsiVrTwHnlzM-Ijefhu$$w4RFYb5JSKsgidHkZeSpC",
    "targetPort" : "ypJGr_koaJ3P9vj_rS0PP$$n8UbORQJXlMZTwCq66QRK"
  } ],
  "processes" : {
    "uYV-56hdkfKB5mrdaY71J$$O8jSrDw9o0rH8m7TgXB2E" : {
      "id" : "uYV-56hdkfKB5mrdaY71J$$O8jSrDw9o0rH8m7TgXB2E",
      "component" : "Source",
      "metadata" : {
        "label" : "dataset_cust_in",
        "slug" : "dataset_cust_in",
        "x" : 120,
        "y" : 220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "aVsxNF8mh-7PZNzD2YVzm$$DfiR-wAZIBY2SyD4DuzMQ",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/dataset_cust_in"
      }
    },
    "80LsiVrTwHnlzM-Ijefhu$$w4RFYb5JSKsgidHkZeSpC" : {
      "id" : "80LsiVrTwHnlzM-Ijefhu$$w4RFYb5JSKsgidHkZeSpC",
      "component" : "CustomGemRepartitionJoinSplit",
      "metadata" : {
        "label" : "CustomGemRepartitionJoinSplit_1",
        "slug" : "CustomGemRepartitionJoinSplit_1",
        "x" : 300,
        "y" : 220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "ypJGr_koaJ3P9vj_rS0PP$$n8UbORQJXlMZTwCq66QRK",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "MDOoUq_gb4jylh98sIXr_$$dj2i43qZAXuBhZE_2FC36",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "overwriteDefaultNPartitions" : false,
        "hashExpressions" : [ ],
        "columnsSelector" : [ ],
        "repartitionType" : "coalesce",
        "rangeExpressions" : [ ],
        "nPartitions" : "10"
      },
      "componentInfo" : {
        "gemId" : "gems/CustomGemRepartitionJoinSplit",
        "projectName" : "Scala_Sanity_Project"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  }
}